ParticleSystem(bpy_struct)
==========================

.. module:: bpy.types

base class --- :class:`bpy_struct`

.. class:: ParticleSystem(bpy_struct)

   Particle system in an object

   .. data:: active_particle_target

      :type: :class:`ParticleTarget`, (readonly)

   .. attribute:: active_particle_target_index

      :type: int in [0, inf], default 0

   .. attribute:: billboard_normal_uv

      UV map to control billboard normals

      :type: string, default "", (never None)

   .. attribute:: billboard_split_uv

      UV map to control billboard splitting

      :type: string, default "", (never None)

   .. attribute:: billboard_time_index_uv

      UV map to control billboard time index (X-Y)

      :type: string, default "", (never None)

   .. data:: child_particles

      Child particles generated by the particle system

      :type: :class:`bpy_prop_collection` of :class:`ChildParticle`, (readonly)

   .. attribute:: child_seed

      Offset in the random number table for child particles, to get a different randomized result

      :type: int in [0, inf], default 0

   .. data:: cloth

      Cloth dynamics for hair

      :type: :class:`ClothModifier`, (readonly, never None)

   .. data:: dt_frac

      The current simulation time step size, as a fraction of a frame

      :type: float in [0.00990099, 1], default 0.0, (readonly)

   .. data:: has_multiple_caches

      Particle system has multiple point caches

      :type: boolean, default False, (readonly)

   .. attribute:: invert_vertex_group_clump

      Negate the effect of the clump vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_density

      Negate the effect of the density vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_field

      Negate the effect of the field vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_kink

      Negate the effect of the kink vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_length

      Negate the effect of the length vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_rotation

      Negate the effect of the rotation vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_roughness_1

      Negate the effect of the roughness 1 vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_roughness_2

      Negate the effect of the roughness 2 vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_roughness_end

      Negate the effect of the roughness end vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_size

      Negate the effect of the size vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_tangent

      Negate the effect of the tangent vertex group

      :type: boolean, default False

   .. attribute:: invert_vertex_group_velocity

      Negate the effect of the velocity vertex group

      :type: boolean, default False

   .. data:: is_editable

      Particle system can be edited in particle mode

      :type: boolean, default False, (readonly)

   .. data:: is_edited

      Particle system has been edited in particle mode

      :type: boolean, default False, (readonly)

   .. data:: is_global_hair

      Hair keys are in global coordinate space

      :type: boolean, default False, (readonly)

   .. attribute:: name

      Particle system name

      :type: string, default "", (never None)

   .. attribute:: parent

      Use this object's coordinate system instead of global coordinate system

      :type: :class:`Object`

   .. data:: particles

      Particles generated by the particle system

      :type: :class:`bpy_prop_collection` of :class:`Particle`, (readonly)

   .. data:: point_cache

      :type: :class:`PointCache`, (readonly, never None)

   .. attribute:: reactor_target_object

      For reactor systems, the object that has the target particle system (empty if same object)

      :type: :class:`Object`

   .. attribute:: reactor_target_particle_system

      For reactor systems, index of particle system on the target object

      :type: int in [1, 32767], default 0

   .. attribute:: seed

      Offset in the random number table, to get a different randomized result

      :type: int in [0, inf], default 0

   .. attribute:: settings

      Particle system settings

      :type: :class:`ParticleSettings`, (never None)

   .. data:: targets

      Target particle systems

      :type: :class:`bpy_prop_collection` of :class:`ParticleTarget`, (readonly)

   .. attribute:: use_hair_dynamics

      Enable hair dynamics using cloth simulation

      :type: boolean, default False

   .. attribute:: use_keyed_timing

      Use key times

      :type: boolean, default False

   .. attribute:: vertex_group_clump

      Vertex group to control clump

      :type: string, default "", (never None)

   .. attribute:: vertex_group_density

      Vertex group to control density

      :type: string, default "", (never None)

   .. attribute:: vertex_group_field

      Vertex group to control field

      :type: string, default "", (never None)

   .. attribute:: vertex_group_kink

      Vertex group to control kink

      :type: string, default "", (never None)

   .. attribute:: vertex_group_length

      Vertex group to control length

      :type: string, default "", (never None)

   .. attribute:: vertex_group_rotation

      Vertex group to control rotation

      :type: string, default "", (never None)

   .. attribute:: vertex_group_roughness_1

      Vertex group to control roughness 1

      :type: string, default "", (never None)

   .. attribute:: vertex_group_roughness_2

      Vertex group to control roughness 2

      :type: string, default "", (never None)

   .. attribute:: vertex_group_roughness_end

      Vertex group to control roughness end

      :type: string, default "", (never None)

   .. attribute:: vertex_group_size

      Vertex group to control size

      :type: string, default "", (never None)

   .. attribute:: vertex_group_tangent

      Vertex group to control tangent

      :type: string, default "", (never None)

   .. attribute:: vertex_group_velocity

      Vertex group to control velocity

      :type: string, default "", (never None)

   .. method:: set_resolution(scene=None, object=None, resolution='PREVIEW')

      Set the resolution to use for the number of particles

      :arg scene:

         Scene

      :type scene: :class:`Scene`, (optional)
      :arg object:

         Object

      :type object: :class:`Object`, (optional)
      :arg resolution:

         Resolution settings to apply

         * ``PREVIEW`` Preview, Apply modifier preview settings.
         * ``RENDER`` Render, Apply modifier render settings.

      :type resolution: enum in ['PREVIEW', 'RENDER'], (optional)

   .. method:: co_hair(object, particle_no=0, step=0)

      Obtain cache hair data

      :arg object:

         Object

      :type object: :class:`Object`, (never None)
      :arg particle_no:

         Particle no

      :type particle_no: int in [-inf, inf], (optional)
      :arg step:

         step no

      :type step: int in [-inf, inf], (optional)
      :return:

         Co, Exported hairkey location

      :rtype: float array of 3 items in [-inf, inf]

   .. method:: uv_on_emitter(modifier, particle=None, particle_no=0, uv_no=0)

      Obtain uv for all particles

      :arg modifier:

         Particle modifier

      :type modifier: :class:`ParticleSystemModifier`, (never None)
      :arg particle:

         Particle

      :type particle: :class:`Particle`, (optional)
      :arg particle_no:

         Particle no

      :type particle_no: int in [-inf, inf], (optional)
      :arg uv_no:

         UV no

      :type uv_no: int in [-inf, inf], (optional)
      :return:

         uv

      :rtype: float array of 2 items in [-inf, inf]

   .. method:: mcol_on_emitter(modifier, particle, particle_no=0, vcol_no=0)

      Obtain mcol for all particles

      :arg modifier:

         Particle modifier

      :type modifier: :class:`ParticleSystemModifier`, (never None)
      :arg particle:

         Particle

      :type particle: :class:`Particle`, (never None)
      :arg particle_no:

         Particle no

      :type particle_no: int in [-inf, inf], (optional)
      :arg vcol_no:

         vcol no

      :type vcol_no: int in [-inf, inf], (optional)
      :return:

         mcol

      :rtype: float array of 3 items in [0, inf]

.. rubric:: Inherited Properties

.. hlist::
   :columns: 2

   * :class:`bpy_struct.id_data`

.. rubric:: Inherited Functions

.. hlist::
   :columns: 2

   * :class:`bpy_struct.as_pointer`
   * :class:`bpy_struct.driver_add`
   * :class:`bpy_struct.driver_remove`
   * :class:`bpy_struct.get`
   * :class:`bpy_struct.is_property_hidden`
   * :class:`bpy_struct.is_property_readonly`
   * :class:`bpy_struct.is_property_set`
   * :class:`bpy_struct.items`
   * :class:`bpy_struct.keyframe_delete`
   * :class:`bpy_struct.keyframe_insert`
   * :class:`bpy_struct.keys`
   * :class:`bpy_struct.path_from_id`
   * :class:`bpy_struct.path_resolve`
   * :class:`bpy_struct.property_unset`
   * :class:`bpy_struct.type_recast`
   * :class:`bpy_struct.values`

.. rubric:: References

.. hlist::
   :columns: 2

   * :mod:`bpy.context.particle_system`
   * :mod:`bpy.context.particle_system_editable`
   * :class:`DupliObject.particle_system`
   * :class:`DynamicPaintBrushSettings.particle_system`
   * :class:`Object.particle_systems`
   * :class:`ParticleSystemModifier.particle_system`
   * :class:`ParticleSystems.active`
   * :class:`PointDensity.particle_system`
   * :class:`ShaderNodeTexPointDensity.particle_system`
   * :class:`SmokeFlowSettings.particle_system`

